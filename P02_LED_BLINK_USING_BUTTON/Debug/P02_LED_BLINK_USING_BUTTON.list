
P02_LED_BLINK_USING_BUTTON.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000027c  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000424  0800042c  0001042c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000424  08000424  0001042c  2**0
                  CONTENTS
  4 .ARM          00000000  08000424  08000424  0001042c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000424  0800042c  0001042c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000424  08000424  00010424  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000428  08000428  00010428  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001042c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0001042c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0001042c  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000069f  00000000  00000000  0001045c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000019f  00000000  00000000  00010afb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000070  00000000  00000000  00010ca0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000048  00000000  00000000  00010d10  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000001a6  00000000  00000000  00010d58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000094c  00000000  00000000  00010efe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00037a26  00000000  00000000  0001184a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  00049270  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000a8  00000000  00000000  000492c0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	0800040c 	.word	0x0800040c

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	0800040c 	.word	0x0800040c

080001e8 <SysClockConfig>:
#include <Delay_F407G.h>
#include <RCC_Config.h>
#include <stm32f4xx.h>

void SysClockConfig(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	af00      	add	r7, sp, #0
	#define PLL_N 336
	#define PLL_P 0 // PLLP = 2
	#define PLL_Q 7 // PLLQ = 7

	// Step 1
	RCC->CR |= RCC_CR_HSEON;
 80001ec:	4b2b      	ldr	r3, [pc, #172]	; (800029c <SysClockConfig+0xb4>)
 80001ee:	681b      	ldr	r3, [r3, #0]
 80001f0:	4a2a      	ldr	r2, [pc, #168]	; (800029c <SysClockConfig+0xb4>)
 80001f2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80001f6:	6013      	str	r3, [r2, #0]
	while(!(RCC->CR & RCC_CR_HSERDY));
 80001f8:	bf00      	nop
 80001fa:	4b28      	ldr	r3, [pc, #160]	; (800029c <SysClockConfig+0xb4>)
 80001fc:	681b      	ldr	r3, [r3, #0]
 80001fe:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000202:	2b00      	cmp	r3, #0
 8000204:	d0f9      	beq.n	80001fa <SysClockConfig+0x12>
	// Delay_ms(10);

	// Step 2
	RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000206:	4b25      	ldr	r3, [pc, #148]	; (800029c <SysClockConfig+0xb4>)
 8000208:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800020a:	4a24      	ldr	r2, [pc, #144]	; (800029c <SysClockConfig+0xb4>)
 800020c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000210:	6413      	str	r3, [r2, #64]	; 0x40
	PWR->CR |= PWR_CR_VOS;
 8000212:	4b23      	ldr	r3, [pc, #140]	; (80002a0 <SysClockConfig+0xb8>)
 8000214:	681b      	ldr	r3, [r3, #0]
 8000216:	4a22      	ldr	r2, [pc, #136]	; (80002a0 <SysClockConfig+0xb8>)
 8000218:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800021c:	6013      	str	r3, [r2, #0]

	// Step 3
	FLASH->ACR |= FLASH_ACR_ICEN | FLASH_ACR_DCEN | FLASH_ACR_PRFTEN | FLASH_ACR_LATENCY_5WS;
 800021e:	4b21      	ldr	r3, [pc, #132]	; (80002a4 <SysClockConfig+0xbc>)
 8000220:	681b      	ldr	r3, [r3, #0]
 8000222:	4a20      	ldr	r2, [pc, #128]	; (80002a4 <SysClockConfig+0xbc>)
 8000224:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8000228:	f043 0305 	orr.w	r3, r3, #5
 800022c:	6013      	str	r3, [r2, #0]

	// Step 4
	RCC->CFGR |= RCC_CFGR_HPRE_DIV1; // AHB PRESCALER = 1
 800022e:	4b1b      	ldr	r3, [pc, #108]	; (800029c <SysClockConfig+0xb4>)
 8000230:	4a1a      	ldr	r2, [pc, #104]	; (800029c <SysClockConfig+0xb4>)
 8000232:	689b      	ldr	r3, [r3, #8]
 8000234:	6093      	str	r3, [r2, #8]
	RCC->CFGR |= RCC_CFGR_PPRE1_DIV4; // APB1 PRESCALER = 4
 8000236:	4b19      	ldr	r3, [pc, #100]	; (800029c <SysClockConfig+0xb4>)
 8000238:	689b      	ldr	r3, [r3, #8]
 800023a:	4a18      	ldr	r2, [pc, #96]	; (800029c <SysClockConfig+0xb4>)
 800023c:	f443 53a0 	orr.w	r3, r3, #5120	; 0x1400
 8000240:	6093      	str	r3, [r2, #8]
	RCC->CFGR |= RCC_CFGR_PPRE2_DIV2; // APB2 PRESCALER = 2
 8000242:	4b16      	ldr	r3, [pc, #88]	; (800029c <SysClockConfig+0xb4>)
 8000244:	689b      	ldr	r3, [r3, #8]
 8000246:	4a15      	ldr	r2, [pc, #84]	; (800029c <SysClockConfig+0xb4>)
 8000248:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800024c:	6093      	str	r3, [r2, #8]

	// Step 5
	RCC->PLLCFGR |= (PLL_M<<0) | (PLL_N<<6) | (PLL_P<<16) | (PLL_Q<<24) | RCC_PLLCFGR_PLLSRC_HSE;
 800024e:	4b13      	ldr	r3, [pc, #76]	; (800029c <SysClockConfig+0xb4>)
 8000250:	685a      	ldr	r2, [r3, #4]
 8000252:	4912      	ldr	r1, [pc, #72]	; (800029c <SysClockConfig+0xb4>)
 8000254:	4b14      	ldr	r3, [pc, #80]	; (80002a8 <SysClockConfig+0xc0>)
 8000256:	4313      	orrs	r3, r2
 8000258:	604b      	str	r3, [r1, #4]

	// Step 6
	RCC->CR |= RCC_CR_PLLON;
 800025a:	4b10      	ldr	r3, [pc, #64]	; (800029c <SysClockConfig+0xb4>)
 800025c:	681b      	ldr	r3, [r3, #0]
 800025e:	4a0f      	ldr	r2, [pc, #60]	; (800029c <SysClockConfig+0xb4>)
 8000260:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000264:	6013      	str	r3, [r2, #0]
	while(!(RCC->CR & RCC_CR_PLLRDY));
 8000266:	bf00      	nop
 8000268:	4b0c      	ldr	r3, [pc, #48]	; (800029c <SysClockConfig+0xb4>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000270:	2b00      	cmp	r3, #0
 8000272:	d0f9      	beq.n	8000268 <SysClockConfig+0x80>
	// Delay_ms(10);

	// Step 7
	RCC->CFGR |= RCC_CFGR_SW_PLL;
 8000274:	4b09      	ldr	r3, [pc, #36]	; (800029c <SysClockConfig+0xb4>)
 8000276:	689b      	ldr	r3, [r3, #8]
 8000278:	4a08      	ldr	r2, [pc, #32]	; (800029c <SysClockConfig+0xb4>)
 800027a:	f043 0302 	orr.w	r3, r3, #2
 800027e:	6093      	str	r3, [r2, #8]
	while((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);
 8000280:	bf00      	nop
 8000282:	4b06      	ldr	r3, [pc, #24]	; (800029c <SysClockConfig+0xb4>)
 8000284:	689b      	ldr	r3, [r3, #8]
 8000286:	f003 030c 	and.w	r3, r3, #12
 800028a:	2b08      	cmp	r3, #8
 800028c:	d1f9      	bne.n	8000282 <SysClockConfig+0x9a>
	// Delay_ms(10);
}
 800028e:	bf00      	nop
 8000290:	bf00      	nop
 8000292:	46bd      	mov	sp, r7
 8000294:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000298:	4770      	bx	lr
 800029a:	bf00      	nop
 800029c:	40023800 	.word	0x40023800
 80002a0:	40007000 	.word	0x40007000
 80002a4:	40023c00 	.word	0x40023c00
 80002a8:	07405408 	.word	0x07405408

080002ac <GPIO_Config>:
#include <stm32f4xx.h>
#include <RCC_Config.h>
#include <Delay_F407G.h>

void GPIO_Config(void)
{
 80002ac:	b480      	push	{r7}
 80002ae:	af00      	add	r7, sp, #0
	// ENABLE GIPOA CLOCK
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIODEN;
 80002b0:	4b1d      	ldr	r3, [pc, #116]	; (8000328 <GPIO_Config+0x7c>)
 80002b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b4:	4a1c      	ldr	r2, [pc, #112]	; (8000328 <GPIO_Config+0x7c>)
 80002b6:	f043 0308 	orr.w	r3, r3, #8
 80002ba:	6313      	str	r3, [r2, #48]	; 0x30
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 80002bc:	4b1a      	ldr	r3, [pc, #104]	; (8000328 <GPIO_Config+0x7c>)
 80002be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c0:	4a19      	ldr	r2, [pc, #100]	; (8000328 <GPIO_Config+0x7c>)
 80002c2:	f043 0301 	orr.w	r3, r3, #1
 80002c6:	6313      	str	r3, [r2, #48]	; 0x30

	// SET PD13 (BUILT IN LED) AS OUTPUT MODE
	GPIOD->MODER |= (1<<26);
 80002c8:	4b18      	ldr	r3, [pc, #96]	; (800032c <GPIO_Config+0x80>)
 80002ca:	681b      	ldr	r3, [r3, #0]
 80002cc:	4a17      	ldr	r2, [pc, #92]	; (800032c <GPIO_Config+0x80>)
 80002ce:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80002d2:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &= ~(1<<27);
 80002d4:	4b15      	ldr	r3, [pc, #84]	; (800032c <GPIO_Config+0x80>)
 80002d6:	681b      	ldr	r3, [r3, #0]
 80002d8:	4a14      	ldr	r2, [pc, #80]	; (800032c <GPIO_Config+0x80>)
 80002da:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 80002de:	6013      	str	r3, [r2, #0]

	// SET PA0 (USER BUTTON) AS INPUT MODE
	GPIOA->MODER &= ~((1<<0) | (1<<1));
 80002e0:	4b13      	ldr	r3, [pc, #76]	; (8000330 <GPIO_Config+0x84>)
 80002e2:	681b      	ldr	r3, [r3, #0]
 80002e4:	4a12      	ldr	r2, [pc, #72]	; (8000330 <GPIO_Config+0x84>)
 80002e6:	f023 0303 	bic.w	r3, r3, #3
 80002ea:	6013      	str	r3, [r2, #0]

	// SET OUTPUT PUSH-PULL
	GPIOD->OTYPER &= ~(1<<13);
 80002ec:	4b0f      	ldr	r3, [pc, #60]	; (800032c <GPIO_Config+0x80>)
 80002ee:	685b      	ldr	r3, [r3, #4]
 80002f0:	4a0e      	ldr	r2, [pc, #56]	; (800032c <GPIO_Config+0x80>)
 80002f2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80002f6:	6053      	str	r3, [r2, #4]
	GPIOA->OTYPER &= ~(1<<0);
 80002f8:	4b0d      	ldr	r3, [pc, #52]	; (8000330 <GPIO_Config+0x84>)
 80002fa:	685b      	ldr	r3, [r3, #4]
 80002fc:	4a0c      	ldr	r2, [pc, #48]	; (8000330 <GPIO_Config+0x84>)
 80002fe:	f023 0301 	bic.w	r3, r3, #1
 8000302:	6053      	str	r3, [r2, #4]

	// SET OUTPUT SPEED AS HIGH
	GPIOD->OSPEEDR |= (2<<26);
 8000304:	4b09      	ldr	r3, [pc, #36]	; (800032c <GPIO_Config+0x80>)
 8000306:	689b      	ldr	r3, [r3, #8]
 8000308:	4a08      	ldr	r2, [pc, #32]	; (800032c <GPIO_Config+0x80>)
 800030a:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 800030e:	6093      	str	r3, [r2, #8]
	GPIOA->OSPEEDR |= (2<<0);
 8000310:	4b07      	ldr	r3, [pc, #28]	; (8000330 <GPIO_Config+0x84>)
 8000312:	689b      	ldr	r3, [r3, #8]
 8000314:	4a06      	ldr	r2, [pc, #24]	; (8000330 <GPIO_Config+0x84>)
 8000316:	f043 0302 	orr.w	r3, r3, #2
 800031a:	6093      	str	r3, [r2, #8]
}
 800031c:	bf00      	nop
 800031e:	46bd      	mov	sp, r7
 8000320:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000324:	4770      	bx	lr
 8000326:	bf00      	nop
 8000328:	40023800 	.word	0x40023800
 800032c:	40020c00 	.word	0x40020c00
 8000330:	40020000 	.word	0x40020000

08000334 <main>:

int main(void)
{
 8000334:	b580      	push	{r7, lr}
 8000336:	af00      	add	r7, sp, #0
	SysClockConfig();
 8000338:	f7ff ff56 	bl	80001e8 <SysClockConfig>
	GPIO_Config();
 800033c:	f7ff ffb6 	bl	80002ac <GPIO_Config>

	while(1)
	{
		if(GPIOA->IDR & (1<<0))
 8000340:	4b09      	ldr	r3, [pc, #36]	; (8000368 <main+0x34>)
 8000342:	691b      	ldr	r3, [r3, #16]
 8000344:	f003 0301 	and.w	r3, r3, #1
 8000348:	2b00      	cmp	r3, #0
 800034a:	d006      	beq.n	800035a <main+0x26>
		{
			GPIOD->ODR |= (1<<13);
 800034c:	4b07      	ldr	r3, [pc, #28]	; (800036c <main+0x38>)
 800034e:	695b      	ldr	r3, [r3, #20]
 8000350:	4a06      	ldr	r2, [pc, #24]	; (800036c <main+0x38>)
 8000352:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000356:	6153      	str	r3, [r2, #20]
 8000358:	e7f2      	b.n	8000340 <main+0xc>
		}
		else
		{
			GPIOD->ODR &= ~(1<<13);
 800035a:	4b04      	ldr	r3, [pc, #16]	; (800036c <main+0x38>)
 800035c:	695b      	ldr	r3, [r3, #20]
 800035e:	4a03      	ldr	r2, [pc, #12]	; (800036c <main+0x38>)
 8000360:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000364:	6153      	str	r3, [r2, #20]
		if(GPIOA->IDR & (1<<0))
 8000366:	e7eb      	b.n	8000340 <main+0xc>
 8000368:	40020000 	.word	0x40020000
 800036c:	40020c00 	.word	0x40020c00

08000370 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000370:	480d      	ldr	r0, [pc, #52]	; (80003a8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000372:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000374:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000378:	480c      	ldr	r0, [pc, #48]	; (80003ac <LoopForever+0x6>)
  ldr r1, =_edata
 800037a:	490d      	ldr	r1, [pc, #52]	; (80003b0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800037c:	4a0d      	ldr	r2, [pc, #52]	; (80003b4 <LoopForever+0xe>)
  movs r3, #0
 800037e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000380:	e002      	b.n	8000388 <LoopCopyDataInit>

08000382 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000382:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000384:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000386:	3304      	adds	r3, #4

08000388 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000388:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800038a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800038c:	d3f9      	bcc.n	8000382 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800038e:	4a0a      	ldr	r2, [pc, #40]	; (80003b8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000390:	4c0a      	ldr	r4, [pc, #40]	; (80003bc <LoopForever+0x16>)
  movs r3, #0
 8000392:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000394:	e001      	b.n	800039a <LoopFillZerobss>

08000396 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000396:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000398:	3204      	adds	r2, #4

0800039a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800039a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800039c:	d3fb      	bcc.n	8000396 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800039e:	f000 f811 	bl	80003c4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003a2:	f7ff ffc7 	bl	8000334 <main>

080003a6 <LoopForever>:

LoopForever:
    b LoopForever
 80003a6:	e7fe      	b.n	80003a6 <LoopForever>
  ldr   r0, =_estack
 80003a8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80003ac:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003b0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80003b4:	0800042c 	.word	0x0800042c
  ldr r2, =_sbss
 80003b8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80003bc:	2000001c 	.word	0x2000001c

080003c0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003c0:	e7fe      	b.n	80003c0 <ADC_IRQHandler>
	...

080003c4 <__libc_init_array>:
 80003c4:	b570      	push	{r4, r5, r6, lr}
 80003c6:	4d0d      	ldr	r5, [pc, #52]	; (80003fc <__libc_init_array+0x38>)
 80003c8:	4c0d      	ldr	r4, [pc, #52]	; (8000400 <__libc_init_array+0x3c>)
 80003ca:	1b64      	subs	r4, r4, r5
 80003cc:	10a4      	asrs	r4, r4, #2
 80003ce:	2600      	movs	r6, #0
 80003d0:	42a6      	cmp	r6, r4
 80003d2:	d109      	bne.n	80003e8 <__libc_init_array+0x24>
 80003d4:	4d0b      	ldr	r5, [pc, #44]	; (8000404 <__libc_init_array+0x40>)
 80003d6:	4c0c      	ldr	r4, [pc, #48]	; (8000408 <__libc_init_array+0x44>)
 80003d8:	f000 f818 	bl	800040c <_init>
 80003dc:	1b64      	subs	r4, r4, r5
 80003de:	10a4      	asrs	r4, r4, #2
 80003e0:	2600      	movs	r6, #0
 80003e2:	42a6      	cmp	r6, r4
 80003e4:	d105      	bne.n	80003f2 <__libc_init_array+0x2e>
 80003e6:	bd70      	pop	{r4, r5, r6, pc}
 80003e8:	f855 3b04 	ldr.w	r3, [r5], #4
 80003ec:	4798      	blx	r3
 80003ee:	3601      	adds	r6, #1
 80003f0:	e7ee      	b.n	80003d0 <__libc_init_array+0xc>
 80003f2:	f855 3b04 	ldr.w	r3, [r5], #4
 80003f6:	4798      	blx	r3
 80003f8:	3601      	adds	r6, #1
 80003fa:	e7f2      	b.n	80003e2 <__libc_init_array+0x1e>
 80003fc:	08000424 	.word	0x08000424
 8000400:	08000424 	.word	0x08000424
 8000404:	08000424 	.word	0x08000424
 8000408:	08000428 	.word	0x08000428

0800040c <_init>:
 800040c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800040e:	bf00      	nop
 8000410:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000412:	bc08      	pop	{r3}
 8000414:	469e      	mov	lr, r3
 8000416:	4770      	bx	lr

08000418 <_fini>:
 8000418:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800041a:	bf00      	nop
 800041c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800041e:	bc08      	pop	{r3}
 8000420:	469e      	mov	lr, r3
 8000422:	4770      	bx	lr
