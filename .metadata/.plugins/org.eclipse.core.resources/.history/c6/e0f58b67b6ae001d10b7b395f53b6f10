#include <stm32f4xx.h>

void USART_Config(void);
char USART_Read(void);

int main(void)
{
	USART_Config();

	while(1)
	{
		char c;
		c = USART_Read();
		if(c == 'A')
			GPIOA->ODR |= (1<<0);
		else if(c == 'B')
			GPIOA->ODR &= ~(1<<0);
	}
}

void USART_Config(void)
{
	// ENABLE GPIOA CLOCK
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;

	// SET PINS AS ALTERNATE FUNCTION MODE
	GPIOA->MODER &= ~(1<<6);
	GPIOA->MODER |= (1<<7);

	// SET PA0 AS OUTPUT PIN
	GPIOA->MODER &= ~(1<<6);
	GPIOA->MODER |= (1<<7);

	// PA2 - USART2_TX, PA3 - USART2_RX (AF7)
	// SET THE ALTERNATE FUNCTION LOW REGISTER
	GPIOA->AFR[0] |= (7<<12);
	GPIOA->AFR[0] &= ~(1<<15);

	// ENABLE USART2 CLOCK
	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;

	// SET BRR, RE, UE
	USART2->BRR = 0x0683;
	USART2->CR1 = 0x00;
	USART2->CR1 |= (1<<2);
	USART2->CR1 |= (1<<13);
}

char USART_Read(void)
{
	while(!(USART2->SR & USART_SR_RXNE));
	return USART2->DR;
}
