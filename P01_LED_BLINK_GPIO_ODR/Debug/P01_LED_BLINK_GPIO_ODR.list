
P01_LED_BLINK_GPIO_ODR.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001b8  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000360  08000368  00010368  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000360  08000360  00010368  2**0
                  CONTENTS
  4 .ARM          00000000  08000360  08000360  00010368  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000360  08000368  00010368  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000360  08000360  00010360  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000364  08000364  00010364  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010368  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010368  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010368  2**0
                  CONTENTS, READONLY
 13 .debug_info   000003b5  00000000  00000000  00010398  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000124  00000000  00000000  0001074d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000058  00000000  00000000  00010878  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000040  00000000  00000000  000108d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000a2eb  00000000  00000000  00010910  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000004ee  00000000  00000000  0001abfb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000379c1  00000000  00000000  0001b0e9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  00052aaa  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000a0  00000000  00000000  00052afc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000348 	.word	0x08000348

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000348 	.word	0x08000348

080001e8 <GPIO_Config>:
#include <stm32f4xx.h>

void GPIO_Config(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	af00      	add	r7, sp, #0
	// ENABLE GIPOA CLOCK
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIODEN;
 80001ec:	4b11      	ldr	r3, [pc, #68]	; (8000234 <GPIO_Config+0x4c>)
 80001ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001f0:	4a10      	ldr	r2, [pc, #64]	; (8000234 <GPIO_Config+0x4c>)
 80001f2:	f043 0308 	orr.w	r3, r3, #8
 80001f6:	6313      	str	r3, [r2, #48]	; 0x30
	// SET PD13 (BUILT IN LED) AS OUTPUT MODE
	GPIOD->MODER |= (1<<26);
 80001f8:	4b0f      	ldr	r3, [pc, #60]	; (8000238 <GPIO_Config+0x50>)
 80001fa:	681b      	ldr	r3, [r3, #0]
 80001fc:	4a0e      	ldr	r2, [pc, #56]	; (8000238 <GPIO_Config+0x50>)
 80001fe:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000202:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &= ~(1<<27);
 8000204:	4b0c      	ldr	r3, [pc, #48]	; (8000238 <GPIO_Config+0x50>)
 8000206:	681b      	ldr	r3, [r3, #0]
 8000208:	4a0b      	ldr	r2, [pc, #44]	; (8000238 <GPIO_Config+0x50>)
 800020a:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 800020e:	6013      	str	r3, [r2, #0]
	// SET OUTPUT PUSH-PULL
	GPIOD->OTYPER &= ~(1<<13);
 8000210:	4b09      	ldr	r3, [pc, #36]	; (8000238 <GPIO_Config+0x50>)
 8000212:	685b      	ldr	r3, [r3, #4]
 8000214:	4a08      	ldr	r2, [pc, #32]	; (8000238 <GPIO_Config+0x50>)
 8000216:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800021a:	6053      	str	r3, [r2, #4]
	// SET OUTPUT SPEED AS HIGH
	GPIOD->OSPEEDR |= (2<<26);
 800021c:	4b06      	ldr	r3, [pc, #24]	; (8000238 <GPIO_Config+0x50>)
 800021e:	689b      	ldr	r3, [r3, #8]
 8000220:	4a05      	ldr	r2, [pc, #20]	; (8000238 <GPIO_Config+0x50>)
 8000222:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8000226:	6093      	str	r3, [r2, #8]
}
 8000228:	bf00      	nop
 800022a:	46bd      	mov	sp, r7
 800022c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000230:	4770      	bx	lr
 8000232:	bf00      	nop
 8000234:	40023800 	.word	0x40023800
 8000238:	40020c00 	.word	0x40020c00

0800023c <Delay>:

void Delay(int delay)
{
 800023c:	b480      	push	{r7}
 800023e:	b085      	sub	sp, #20
 8000240:	af00      	add	r7, sp, #0
 8000242:	6078      	str	r0, [r7, #4]
	for(; delay>0; delay--)
 8000244:	e00d      	b.n	8000262 <Delay+0x26>
		for(int i=0; i<=3195; i++);
 8000246:	2300      	movs	r3, #0
 8000248:	60fb      	str	r3, [r7, #12]
 800024a:	e002      	b.n	8000252 <Delay+0x16>
 800024c:	68fb      	ldr	r3, [r7, #12]
 800024e:	3301      	adds	r3, #1
 8000250:	60fb      	str	r3, [r7, #12]
 8000252:	68fb      	ldr	r3, [r7, #12]
 8000254:	f640 427b 	movw	r2, #3195	; 0xc7b
 8000258:	4293      	cmp	r3, r2
 800025a:	ddf7      	ble.n	800024c <Delay+0x10>
	for(; delay>0; delay--)
 800025c:	687b      	ldr	r3, [r7, #4]
 800025e:	3b01      	subs	r3, #1
 8000260:	607b      	str	r3, [r7, #4]
 8000262:	687b      	ldr	r3, [r7, #4]
 8000264:	2b00      	cmp	r3, #0
 8000266:	dcee      	bgt.n	8000246 <Delay+0xa>
}
 8000268:	bf00      	nop
 800026a:	bf00      	nop
 800026c:	3714      	adds	r7, #20
 800026e:	46bd      	mov	sp, r7
 8000270:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000274:	4770      	bx	lr
	...

08000278 <main>:

int main(void)
{
 8000278:	b580      	push	{r7, lr}
 800027a:	af00      	add	r7, sp, #0
	GPIO_Config();
 800027c:	f7ff ffb4 	bl	80001e8 <GPIO_Config>

	while(1)
	{
		GPIOD->ODR |= (1<<13);
 8000280:	4b09      	ldr	r3, [pc, #36]	; (80002a8 <main+0x30>)
 8000282:	695b      	ldr	r3, [r3, #20]
 8000284:	4a08      	ldr	r2, [pc, #32]	; (80002a8 <main+0x30>)
 8000286:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800028a:	6153      	str	r3, [r2, #20]
		Delay(100);
 800028c:	2064      	movs	r0, #100	; 0x64
 800028e:	f7ff ffd5 	bl	800023c <Delay>
		GPIOD->ODR &= ~(1<<13);
 8000292:	4b05      	ldr	r3, [pc, #20]	; (80002a8 <main+0x30>)
 8000294:	695b      	ldr	r3, [r3, #20]
 8000296:	4a04      	ldr	r2, [pc, #16]	; (80002a8 <main+0x30>)
 8000298:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800029c:	6153      	str	r3, [r2, #20]
		Delay(100);
 800029e:	2064      	movs	r0, #100	; 0x64
 80002a0:	f7ff ffcc 	bl	800023c <Delay>
		GPIOD->ODR |= (1<<13);
 80002a4:	e7ec      	b.n	8000280 <main+0x8>
 80002a6:	bf00      	nop
 80002a8:	40020c00 	.word	0x40020c00

080002ac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002ac:	480d      	ldr	r0, [pc, #52]	; (80002e4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ae:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002b0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002b4:	480c      	ldr	r0, [pc, #48]	; (80002e8 <LoopForever+0x6>)
  ldr r1, =_edata
 80002b6:	490d      	ldr	r1, [pc, #52]	; (80002ec <LoopForever+0xa>)
  ldr r2, =_sidata
 80002b8:	4a0d      	ldr	r2, [pc, #52]	; (80002f0 <LoopForever+0xe>)
  movs r3, #0
 80002ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002bc:	e002      	b.n	80002c4 <LoopCopyDataInit>

080002be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002c2:	3304      	adds	r3, #4

080002c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002c8:	d3f9      	bcc.n	80002be <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ca:	4a0a      	ldr	r2, [pc, #40]	; (80002f4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002cc:	4c0a      	ldr	r4, [pc, #40]	; (80002f8 <LoopForever+0x16>)
  movs r3, #0
 80002ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002d0:	e001      	b.n	80002d6 <LoopFillZerobss>

080002d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002d4:	3204      	adds	r2, #4

080002d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002d8:	d3fb      	bcc.n	80002d2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002da:	f000 f811 	bl	8000300 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002de:	f7ff ffcb 	bl	8000278 <main>

080002e2 <LoopForever>:

LoopForever:
    b LoopForever
 80002e2:	e7fe      	b.n	80002e2 <LoopForever>
  ldr   r0, =_estack
 80002e4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002e8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002ec:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002f0:	08000368 	.word	0x08000368
  ldr r2, =_sbss
 80002f4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002f8:	2000001c 	.word	0x2000001c

080002fc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002fc:	e7fe      	b.n	80002fc <ADC_IRQHandler>
	...

08000300 <__libc_init_array>:
 8000300:	b570      	push	{r4, r5, r6, lr}
 8000302:	4d0d      	ldr	r5, [pc, #52]	; (8000338 <__libc_init_array+0x38>)
 8000304:	4c0d      	ldr	r4, [pc, #52]	; (800033c <__libc_init_array+0x3c>)
 8000306:	1b64      	subs	r4, r4, r5
 8000308:	10a4      	asrs	r4, r4, #2
 800030a:	2600      	movs	r6, #0
 800030c:	42a6      	cmp	r6, r4
 800030e:	d109      	bne.n	8000324 <__libc_init_array+0x24>
 8000310:	4d0b      	ldr	r5, [pc, #44]	; (8000340 <__libc_init_array+0x40>)
 8000312:	4c0c      	ldr	r4, [pc, #48]	; (8000344 <__libc_init_array+0x44>)
 8000314:	f000 f818 	bl	8000348 <_init>
 8000318:	1b64      	subs	r4, r4, r5
 800031a:	10a4      	asrs	r4, r4, #2
 800031c:	2600      	movs	r6, #0
 800031e:	42a6      	cmp	r6, r4
 8000320:	d105      	bne.n	800032e <__libc_init_array+0x2e>
 8000322:	bd70      	pop	{r4, r5, r6, pc}
 8000324:	f855 3b04 	ldr.w	r3, [r5], #4
 8000328:	4798      	blx	r3
 800032a:	3601      	adds	r6, #1
 800032c:	e7ee      	b.n	800030c <__libc_init_array+0xc>
 800032e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000332:	4798      	blx	r3
 8000334:	3601      	adds	r6, #1
 8000336:	e7f2      	b.n	800031e <__libc_init_array+0x1e>
 8000338:	08000360 	.word	0x08000360
 800033c:	08000360 	.word	0x08000360
 8000340:	08000360 	.word	0x08000360
 8000344:	08000364 	.word	0x08000364

08000348 <_init>:
 8000348:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800034a:	bf00      	nop
 800034c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800034e:	bc08      	pop	{r3}
 8000350:	469e      	mov	lr, r3
 8000352:	4770      	bx	lr

08000354 <_fini>:
 8000354:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000356:	bf00      	nop
 8000358:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800035a:	bc08      	pop	{r3}
 800035c:	469e      	mov	lr, r3
 800035e:	4770      	bx	lr
